
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.AuthenticatorScalarFieldEnum = {
  credentialID: 'credentialID',
  userId: 'userId',
  providerAccountId: 'providerAccountId',
  credentialPublicKey: 'credentialPublicKey',
  counter: 'counter',
  credentialDeviceType: 'credentialDeviceType',
  credentialBackedUp: 'credentialBackedUp',
  transports: 'transports'
};

exports.Prisma.NewslettersScalarFieldEnum = {
  id: 'id',
  title: 'title',
  numberOfEmailsSent: 'numberOfEmailsSent',
  createdAt: 'createdAt'
};

exports.Prisma.NewsLetterSubscriptionsScalarFieldEnum = {
  id: 'id',
  email: 'email',
  confirmationId: 'confirmationId',
  confirmationExpiresAt: 'confirmationExpiresAt',
  createdAt: 'createdAt',
  confirmedAt: 'confirmedAt',
  canceledAt: 'canceledAt'
};

exports.Prisma.PostsScalarFieldEnum = {
  id: 'id',
  notionId: 'notionId',
  title: 'title',
  title_en: 'title_en',
  slug: 'slug',
  slug_en: 'slug_en',
  category: 'category',
  tags: 'tags',
  coverUrl: 'coverUrl',
  excerpt_pt: 'excerpt_pt',
  excerpt_en: 'excerpt_en',
  readTime: 'readTime',
  featured: 'featured',
  priority: 'priority',
  translatedModel: 'translatedModel',
  ptBr: 'ptBr',
  en: 'en',
  status: 'status',
  publishedAt: 'publishedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PostMetricsScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  numberOfViews: 'numberOfViews',
  totalOfComments: 'totalOfComments',
  numberOfLikes: 'numberOfLikes'
};

exports.Prisma.PostViewsScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  createdAt: 'createdAt'
};

exports.Prisma.PostLikesScalarFieldEnum = {
  userId: 'userId',
  postMetricsId: 'postMetricsId',
  createdAt: 'createdAt'
};

exports.Prisma.PostCommentsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  postId: 'postId',
  comment: 'comment',
  numberOfLikes: 'numberOfLikes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PostCommentsLikesScalarFieldEnum = {
  userId: 'userId',
  postCommentId: 'postCommentId',
  createdAt: 'createdAt'
};

exports.Prisma.ProfileInformationScalarFieldEnum = {
  id: 'id',
  profileInformationType: 'profileInformationType',
  ptBr: 'ptBr',
  en: 'en'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  USER: 'USER'
};

exports.TranslatedModel = exports.$Enums.TranslatedModel = {
  MICROSOFT_TRANSLATOR: 'MICROSOFT_TRANSLATOR',
  GOOGLE_CLOUD_TRANSLATE: 'GOOGLE_CLOUD_TRANSLATE',
  DEEPL: 'DEEPL',
  AMAZON_TRANSLATE: 'AMAZON_TRANSLATE'
};

exports.PostStatus = exports.$Enums.PostStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED'
};

exports.ProfileInformationType = exports.$Enums.ProfileInformationType = {
  STATS: 'STATS',
  SKILLS: 'SKILLS',
  EXPERIENCE: 'EXPERIENCE',
  CERTIFICATION: 'CERTIFICATION',
  GRADUATION: 'GRADUATION',
  BASIC_INFO: 'BASIC_INFO',
  PROJECTS: 'PROJECTS'
};

exports.Prisma.ModelName = {
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  VerificationToken: 'VerificationToken',
  Authenticator: 'Authenticator',
  Newsletters: 'Newsletters',
  NewsLetterSubscriptions: 'NewsLetterSubscriptions',
  Posts: 'Posts',
  PostMetrics: 'PostMetrics',
  PostViews: 'PostViews',
  PostLikes: 'PostLikes',
  PostComments: 'PostComments',
  PostCommentsLikes: 'PostCommentsLikes',
  ProfileInformation: 'ProfileInformation'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/henriquelima/Área de trabalho/Projetos/Pessoal/professional-portfolio/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/henriquelima/Área de trabalho/Projetos/Pessoal/professional-portfolio/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  ADMIN\n  USER\n}\n\nmodel User {\n  id            String          @id @default(cuid())\n  name          String?\n  email         String          @unique\n  emailVerified DateTime?\n  image         String?\n  role          Role            @default(USER)\n  accounts      Account[]\n  sessions      Session[]\n  // Optional for WebAuthn support\n  Authenticator Authenticator[]\n\n  createdAt         DateTime            @default(now())\n  updatedAt         DateTime            @updatedAt\n  PostComments      PostComments[]\n  PostCommentsLikes PostCommentsLikes[]\n  PostLikes         PostLikes[]\n\n  newsLetterSubscription NewsLetterSubscriptions?\n}\n\nmodel Account {\n  userId            String\n  type              String\n  provider          String\n  providerAccountId String\n  refresh_token     String?\n  access_token      String?\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String?\n  session_state     String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@id([provider, providerAccountId])\n}\n\nmodel Session {\n  sessionToken String   @unique\n  userId       String\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String\n  expires    DateTime\n\n  @@id([identifier, token])\n}\n\n// Optional for WebAuthn support\nmodel Authenticator {\n  credentialID         String  @unique\n  userId               String\n  providerAccountId    String\n  credentialPublicKey  String\n  counter              Int\n  credentialDeviceType String\n  credentialBackedUp   Boolean\n  transports           String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@id([userId, credentialID])\n}\n\nmodel Newsletters {\n  id                 Int      @id @default(autoincrement()) ///Entity ID\n  title              String   @unique @db.VarChar(300) ///Title of the newsletter subscription\n  numberOfEmailsSent Int      @map(\"number_email_sent\") @db.SmallInt ///Number of Email sent\n  createdAt          DateTime @default(now()) @map(\"created_at\") ///Entity creation date \n\n  @@index([createdAt])\n  @@map(\"newsletters\")\n}\n\nmodel NewsLetterSubscriptions {\n  id                    Int       @id @default(autoincrement()) ///Entity ID\n  email                 String    @unique @db.VarChar(256) ///Email used for subscription\n  confirmationId        String    @unique @default(uuid()) @map(\"confirmation_id\") @db.Char(36) ///Universion ID generated on subscription\n  confirmationExpiresAt DateTime  @map(\"confirmation_expires_at\") ///Date of expiration to confirm subscription before enable new subscription for the same email\n  createdAt             DateTime  @default(now()) @map(\"created_at\") ///Entity creation date\n  confirmedAt           DateTime? @map(\"confirmed_at\") ///Date of the confirmation of subscription\n  canceledAt            DateTime? @map(\"canceled_at\") ///Date of the cancelled subscription\n\n  user User? @relation(fields: [email], references: [email])\n\n  @@index([confirmedAt, canceledAt])\n  @@map(\"news_letter_subscription\")\n}\n\nenum TranslatedModel {\n  MICROSOFT_TRANSLATOR\n  GOOGLE_CLOUD_TRANSLATE\n  DEEPL\n  AMAZON_TRANSLATE\n}\n\nenum PostStatus {\n  DRAFT\n  PUBLISHED\n  ARCHIVED\n}\n\nmodel Posts {\n  id         Int      @id @default(autoincrement()) ///Entity ID\n  notionId   String   @unique @map(\"notion_id\") ///Notion Post ID\n  title      String   @db.VarChar(200) /// Post Title\n  title_en   String?  @db.VarChar(200) /// Post Title\n  slug       String   @unique @db.VarChar(220) /// Post Slug\n  slug_en    String?  @unique @db.VarChar(220) /// Post Slug\n  category   String   @db.VarChar(50) ///Post Category\n  tags       String[] @default([]) ///Post Tags\n  coverUrl   String   @map(\"cover_url\") ///Post Cover Image URL\n  excerpt_pt String   @map(\"excerpt_pt\") @db.VarChar(500) ///Post Excerpt in Portuguese (varchar 500)\n  excerpt_en String?  @map(\"excerpt_en\") @db.VarChar(500) ///Post Excerpt in English (varchar 500)\n  readTime   Int      @map(\"read_time\") ///Post Read estimated time\n  featured   Boolean ///If post is featured to be highlighted\n  priority   Int      @db.SmallInt ///Post priority to be at top of posts\n\n  translatedModel TranslatedModel? @map(\"translated_model\") ///Translation model used to translate to english\n  ptBr            Json             @map(\"pt_br\") ///Notion JSON in Portuguese\n  en              Json ///Notion JSON in English\n\n  status      PostStatus @default(DRAFT) ///Status of the post DRAFT, PUBLISHED OR ARCHIVED\n  publishedAt DateTime?  @map(\"published_at\") ///Date of Publish\n  createdAt   DateTime   @default(now()) @map(\"created_at\") ///Date of creation\n  updatedAt   DateTime   @updatedAt @map(\"updated_at\") ///Last date that was edited\n\n  PostMetrics  PostMetrics?\n  PostComments PostComments[]\n  PostViews    PostViews[]\n\n  @@index([tags, category])\n  @@index([featured])\n  @@index([translatedModel])\n  @@index([slug])\n  @@index([slug_en])\n  @@index([status, publishedAt]) // Para listagem de posts publicados\n  @@index([createdAt])\n  @@map(\"posts\")\n}\n\nmodel PostMetrics {\n  id              Int         @id @default(autoincrement()) ///Entity ID\n  postId          Int         @unique @map(\"post_id\") ///Post Id\n  post            Posts       @relation(fields: [postId], references: [id])\n  numberOfViews   Int         @default(0) @map(\"number_of_views\") ///Number of incremental views\n  totalOfComments Int         @default(0) @map(\"total_of_comments\") @db.SmallInt ///Total of comments\n  numberOfLikes   Int         @default(0) @map(\"number_of_likes\") @db.SmallInt ///Number of likes\n  PostLikes       PostLikes[]\n\n  @@map(\"post_metrics\")\n}\n\nmodel PostViews {\n  id        Int      @id @default(autoincrement()) ///Entity ID\n  postId    Int      @map(\"post_id\") ///Post Id\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  post Posts @relation(fields: [postId], references: [id])\n\n  @@map(\"post_views\")\n}\n\nmodel PostLikes {\n  userId String @map(\"user_id\") ///User Id\n  user   User   @relation(fields: [userId], references: [id])\n\n  postMetricsId Int         @map(\"post_metrics_id\") ///Post Metrics Id\n  post          PostMetrics @relation(fields: [postMetricsId], references: [id])\n\n  createdAt DateTime @default(now()) @map(\"created_at\") ///Date of creation\n\n  @@id([userId, postMetricsId])\n  @@index([postMetricsId])\n  @@map(\"post_likes\")\n}\n\nmodel PostComments {\n  id Int @id @default(autoincrement()) ///Entity ID\n\n  userId String @map(\"user_id\") ///User ID\n  user   User   @relation(fields: [userId], references: [id])\n\n  postId Int   @map(\"post_id\") ///Post ID\n  post   Posts @relation(fields: [postId], references: [id])\n\n  comment       String ///Actual comment\n  numberOfLikes Int    @default(0) @map(\"number_of_likes\") @db.SmallInt ///Number of likes of the comment\n\n  createdAt         DateTime            @default(now()) @map(\"created_at\") ///Entity creation date\n  updatedAt         DateTime            @default(now()) @map(\"updated_at\") ///Entity last updated date\n  PostCommentsLikes PostCommentsLikes[]\n\n  @@index([userId])\n  @@index([postId])\n  @@map(\"post_comments\")\n}\n\nmodel PostCommentsLikes {\n  userId String @map(\"user_id\") ///User ID\n  user   User   @relation(fields: [userId], references: [id])\n\n  postCommentId Int          @map(\"post_comments_id\") ///Comment ID\n  postComments  PostComments @relation(fields: [postCommentId], references: [id])\n\n  createdAt DateTime @default(now()) @map(\"created_at\") ///Entity creation date\n\n  @@id([userId, postCommentId])\n  @@index([postCommentId])\n  @@map(\"post_comments_likes\")\n}\n\nenum ProfileInformationType {\n  STATS\n  SKILLS\n  EXPERIENCE\n  CERTIFICATION\n  GRADUATION\n  BASIC_INFO\n  PROJECTS\n}\n\nmodel ProfileInformation {\n  id                     Int                    @id @default(autoincrement()) ///Entity ID\n  profileInformationType ProfileInformationType @unique @map(\"profile_information_type\") ///Profile type of Information (ENUM)\n  ptBr                   Json                   @map(\"pt_br\") ///Information in original language (pt-BR)\n  en                     Json ///Information translated to english\n\n  @@index([profileInformationType])\n  @@map(\"profile_information\")\n}\n",
  "inlineSchemaHash": "ba08d28fcbde2aa3791e72b9e7f391906c140a9d491694637debf3b6850158c0",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"Authenticator\",\"kind\":\"object\",\"type\":\"Authenticator\",\"relationName\":\"AuthenticatorToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"PostComments\",\"kind\":\"object\",\"type\":\"PostComments\",\"relationName\":\"PostCommentsToUser\"},{\"name\":\"PostCommentsLikes\",\"kind\":\"object\",\"type\":\"PostCommentsLikes\",\"relationName\":\"PostCommentsLikesToUser\"},{\"name\":\"PostLikes\",\"kind\":\"object\",\"type\":\"PostLikes\",\"relationName\":\"PostLikesToUser\"},{\"name\":\"newsLetterSubscription\",\"kind\":\"object\",\"type\":\"NewsLetterSubscriptions\",\"relationName\":\"NewsLetterSubscriptionsToUser\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"VerificationToken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Authenticator\":{\"fields\":[{\"name\":\"credentialID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credentialPublicKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"counter\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"credentialDeviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credentialBackedUp\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"transports\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuthenticatorToUser\"}],\"dbName\":null},\"Newsletters\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numberOfEmailsSent\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"number_email_sent\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"newsletters\"},\"NewsLetterSubscriptions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confirmationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"confirmation_id\"},{\"name\":\"confirmationExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"confirmation_expires_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"confirmedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"confirmed_at\"},{\"name\":\"canceledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"canceled_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NewsLetterSubscriptionsToUser\"}],\"dbName\":\"news_letter_subscription\"},\"Posts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"notion_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title_en\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug_en\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coverUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"cover_url\"},{\"name\":\"excerpt_pt\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"excerpt_pt\"},{\"name\":\"excerpt_en\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"excerpt_en\"},{\"name\":\"readTime\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"read_time\"},{\"name\":\"featured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"translatedModel\",\"kind\":\"enum\",\"type\":\"TranslatedModel\",\"dbName\":\"translated_model\"},{\"name\":\"ptBr\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"pt_br\"},{\"name\":\"en\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PostStatus\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"published_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"PostMetrics\",\"kind\":\"object\",\"type\":\"PostMetrics\",\"relationName\":\"PostMetricsToPosts\"},{\"name\":\"PostComments\",\"kind\":\"object\",\"type\":\"PostComments\",\"relationName\":\"PostCommentsToPosts\"},{\"name\":\"PostViews\",\"kind\":\"object\",\"type\":\"PostViews\",\"relationName\":\"PostViewsToPosts\"}],\"dbName\":\"posts\"},\"PostMetrics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"post_id\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Posts\",\"relationName\":\"PostMetricsToPosts\"},{\"name\":\"numberOfViews\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"number_of_views\"},{\"name\":\"totalOfComments\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_of_comments\"},{\"name\":\"numberOfLikes\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"number_of_likes\"},{\"name\":\"PostLikes\",\"kind\":\"object\",\"type\":\"PostLikes\",\"relationName\":\"PostLikesToPostMetrics\"}],\"dbName\":\"post_metrics\"},\"PostViews\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"post_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Posts\",\"relationName\":\"PostViewsToPosts\"}],\"dbName\":\"post_views\"},\"PostLikes\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostLikesToUser\"},{\"name\":\"postMetricsId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"post_metrics_id\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"PostMetrics\",\"relationName\":\"PostLikesToPostMetrics\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"post_likes\"},\"PostComments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostCommentsToUser\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"post_id\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Posts\",\"relationName\":\"PostCommentsToPosts\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numberOfLikes\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"number_of_likes\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"PostCommentsLikes\",\"kind\":\"object\",\"type\":\"PostCommentsLikes\",\"relationName\":\"PostCommentsToPostCommentsLikes\"}],\"dbName\":\"post_comments\"},\"PostCommentsLikes\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostCommentsLikesToUser\"},{\"name\":\"postCommentId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"post_comments_id\"},{\"name\":\"postComments\",\"kind\":\"object\",\"type\":\"PostComments\",\"relationName\":\"PostCommentsToPostCommentsLikes\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"post_comments_likes\"},\"ProfileInformation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileInformationType\",\"kind\":\"enum\",\"type\":\"ProfileInformationType\",\"dbName\":\"profile_information_type\"},{\"name\":\"ptBr\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"pt_br\"},{\"name\":\"en\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"profile_information\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

